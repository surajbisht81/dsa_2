// time complexity is O(n^2) if map is not used. else tc will be O(n) in all the construction questions.


class Solution {
public:
    typedef unordered_map<int, int> ump;
    
    TreeNode *constructFromPrePost(vector<int>& preorder, int pre_s, int pre_e, vector<int>& postorder, int post_s, int post_e, ump &mp){
        
        if(pre_s > pre_e) return NULL;
        
        TreeNode *root = new TreeNode(preorder[pre_s]);
        
        if(pre_s == pre_e) return root;
        
        // this is to be done when map is not used.
        // int idx = post_s;
        // while(postorder[idx] != preorder[pre_s +1]) idx++;
        
        int idx = mp[preorder[pre_s+1]];
        
        int total_ele = idx - post_s + 1;
        
        root->left = constructFromPrePost(preorder, pre_s+1, pre_s+total_ele, postorder, post_s, idx, mp);
        root->right = constructFromPrePost(preorder, pre_s+total_ele+1, pre_e, postorder, idx+1, post_e-1, mp);
            
        return root;
    }
    
    TreeNode* constructFromPrePost(vector<int>& preorder, vector<int>& postorder) {
        int n = preorder.size();
        
        ump mp;
        for(int i=0; i<n; i++) mp[postorder[i]] = i;
        
        return constructFromPrePost(preorder, 0, n-1, postorder, 0, n-1, mp);
    }
};
