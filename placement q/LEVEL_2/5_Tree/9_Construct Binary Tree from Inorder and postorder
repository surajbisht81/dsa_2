class Solution {
public:
    
     TreeNode *buildTree_(vector<int> &inorder, int isi, int iei, vector<int> &postorder, int psi, int pei){
         if(isi > iei){
             return NULL;
         }
         
         int idx = isi;
         while(inorder[idx] != postorder[pei]) idx++;
         
         int total_ele = idx - isi;
         
         TreeNode *node = new TreeNode(postorder[pei]);
         
         node->left = buildTree_(inorder, isi, idx-1, postorder, psi, psi + total_ele -1);
         node->right = buildTree_(inorder, idx+1, iei, postorder, psi + total_ele, pei-1);
         
         return node;
     }
    
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        
        int n = inorder.size();
        return buildTree_(inorder, 0, n-1, postorder, 0, n-1);
    }
};
