/* Given a positive integer n, find the smallest integer which has exactly the same digits existing in the integer n and is greater in value than n.
 If no such positive integer exists, return -1.

Note that the returned integer should fit in 32-bit integer, if there is a valid answer but it does not fit in 32-bit integer, return -1.   */

class Solution {
public:
    int nextGreaterElement(int n) {
        
        string str = to_string(n);
        
        int i = str.length()-2;
        
        while(i >= 0 && str[i] >= str[i+1]){
            i--;
        }
        
        if(i == -1){
            return -1;
        }
        
        int k;
        
        for(int j=str.length()-1; j>i; j--){
            if(str[i] < str[j]){
                k = j;
                break;
            }
        }
        
        swap(str[k], str[i]);
        
        reverse(str.begin()+i+1, str.end());
        
        long num = stol(str);
        if((num <= 2147483647) && (num >= -2147483648)) return num;
        else return -1;
    }
};