/*1. Question will be provided with two Intervals Lists.
2. An interval is is defined as (sp,ep) i.e. sp --> starting point &  ep --> ending point of an interval
3. All intervals are closed in nature
4. Intervals[i] = [startingPointi,endingPointi]
5. Both interval lists are sorted in nature(sorted based upon starting time of each interval).

Task is to "find & print all intersection of intervals from both interval lists(intervals from list 1 & list 2).".

Example 1 : 
    list_1 : [[1,3]] 
    list_2 : [[2,5]]
    Output : [[2,3]]
    Explanation : interval from list 1 starts @ 1 & ends @ 3 where as interval from list 2 starts @ 2 & ends @ 5 thus intersection(time span common in intervals from both lists) is {2,3}.*/

#include<bits/stdc++.h>
using namespace std;

vector<pair<int, int>> solve(vector<vector<int>> list1, vector<vector<int>> list2, int n, int m)
{
    vector<pair<int, int>> ans;
    
    // using two pointer approach, ptr1 pointing to list1 and ptr2 pointing to list2
    int ptr1 = 0;
    int ptr2 = 0;
    
    while(ptr1<list1.size() && ptr2<list2.size()){
        
        int cSp = max(list1[ptr1][0], list2[ptr2][0]);    // intersecting interval starting point is max of both starting point
        int cEp = min(list1[ptr1][1], list2[ptr2][1]);    // intersecting interval ending point is min of both ending point
        
        if(cSp <= cEp){  // if this is true then this is valid intersecting interval
           ans.push_back({cSp, cEp});  // then push it into the answer
        }
        
        if(list1[ptr1][1] < list2[ptr2][1]){    // and also, whose ending point is less, make its pointer +1;
            ptr1++;
        }else{
            ptr2++;
        }
    }
    
    return ans;
}

int main(){
    int n;
    cin>>n;
    
    vector<vector<int>> list1(n);
    for(int i=0; i<n; i++){
        for(int j=0; j<2; j++){
            int x;
            cin>>x;
            list1[i].push_back(x);
        }
    }
    
    int m;
    cin>>m;
    
    vector<vector<int>> list2(m);
    for(int i=0; i<m; i++){
        for(int j=0; j<2; j++){
            int x;
            cin>>x;
            list2[i].push_back(x);
        }
    }
    
    vector<pair<int, int>> res = solve(list1, list2, n, m);
    
    cout<<"[";
    for(int i=0; i<res.size(); i++){
        cout<<"["<<res[i].first<<", "<<res[i].second<<"]";
    }
    cout<<"]";
    
    return 0;
}