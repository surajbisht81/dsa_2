#include<bits/stdc++.h>
using namespace std;

int Palindromic_substring(string str)
{
    int n = str.length();
    
    int dp[n][n];
    
    int cnt=0;
    int i, j;
    
    // look at copy for understanding gap, i and j
    for(int g=0; g<n; g++)
    {
        for( i=0, j=g; j<n; i++, j++)
        {
            if(g==0)                                        // if only one character, then dp contains 1
             dp[i][j] = 1;
             
            else if(g==1)                                   // if two character, then if characters are same then 1 or 0;
             dp[i][j] = (str[i]==str[j]) ? 1 : 0;
             
            else{
                if(str[i] == str[j] and dp[i+1][j-1]==1)
                 dp[i][j] = 1;
                else
                 dp[i][j] = 0;
            }
            
            if(dp[i][j] == 1)
              cnt++;
            }
    }
    return cnt;
}

int main()
{
    string str;
    cin>>str;
    
    cout<<Palindromic_substring(str);
    return 0;
}