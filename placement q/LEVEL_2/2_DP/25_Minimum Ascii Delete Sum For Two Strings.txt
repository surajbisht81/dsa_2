/*1. You are given two strings S1 and S2.
2. You have to make these two strings equal by deleting characters. You can delete characters from any of the two strings.
3. The cost of deleting a character from any string is the ASCII value of that character.
4. You have to find the minimum ASCII sum of deleted characters.*/

#include<bits/stdc++.h>
using namespace std;

int Min_ASCII_Deletion(string str1, string str2)
{
    int n = str1.length();                                       // getting length of both strings
    int m = str2.length();
    
    int dp[n+1][m+1];                                           // making 1 extra size of blank strings
    
    for(int i=n; i>=0; i--)                                    // traversing from bootom right cell
    {
        for(int j=m; j>=0; j--)
        {
            char ch1 = str1[i];
            char ch2 = str2[j];
            
            if(i==n and j==m){                                      // if both string are blank then dp contains 0
                dp[i][j] = 0;
            }else if(i==n){                                        // if 1st string is blank but 2nd is not
                
                dp[i][j] = dp[i][j+1] + (int) ch2;
            }else if(j==m){                                       // if 2nd string is blank but 1st is not
                
                dp[i][j] = dp[i+1][j] + (int) ch1;
            }else{
                
                if(ch1 == ch2){                                     // if characters at ith and jth part is same then go to diagonal
                    dp[i][j] = dp[i+1][j+1];
                }else{                                               // else find min of left and bottom cell + ascii of deleted char
                    
                    dp[i][j] = min( (int)ch1 + dp[i+1][j], (int)ch2 + dp[i][j+1] );
                }
            }
        }
    }
    return dp[0][0];
}

int main()
{
    string str1, str2;
    cin>>str1>>str2;
    
    cout<<Min_ASCII_Deletion(str1, str2);
    return 0;
}