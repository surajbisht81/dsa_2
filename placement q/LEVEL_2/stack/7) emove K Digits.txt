/*Given string num representing a non-negative integer num, and an integer k, return the smallest possible integer after removing k digits from num.

 

Example 1:

Input: num = "1432219", k = 3
Output: "1219"
Explanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.*/



class Solution {
public:
    string removeKdigits(string num, int k) {
        
        stack<char> st;
        
        for(char ch : num)
        {
            while(st.size() > 0 && k > 0 && st.top() > ch){
                st.pop();
                k--;
            }
            
            if(!st.empty() || ch!='0')
             st.push(ch);
        }
        
        while(st.size() > 0 && k > 0){
            st.pop();
            k--;
        }
        
        if(st.empty()){
            return "0";
        }
        
        string res = "";
        
        while(!st.empty())
        {
            res = st.top() + res;
            st.pop();
        }
        
        return res;
    }
};