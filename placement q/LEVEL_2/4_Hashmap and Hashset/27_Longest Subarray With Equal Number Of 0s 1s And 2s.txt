#include<bits/stdc++.h>
using namespace std;

int Equal_012(int arr[], int n)
{
    int maxim = 0;
    
    unordered_map<string, int> mp;
    
    string str = "0#0";                     // difference of (one-zero)#(two-one);
    mp[str] = -1;
    
    int zero = 0, one = 0, two = 0;
    
    for(int i=0; i<n; i++)
    {
        if(arr[i] == 0){
            zero++;
        }else if(arr[i] == 1){
            one++;
        }else{
            two++;
        }
        
        str = to_string(one-zero) + "#" + to_string(two-one);             // we will calculate new string every time
        
        if(mp.find(str) != mp.end()){                                   // if same string is found previously that's means, equal no of zeroes, ones and twos are there
            maxim = max(maxim, i-mp[str]);
        }
        else{
            mp[str] = i;
        }
    }
    
    return maxim;
}

int main()
{
    int n;
    cin>>n;
    
    int arr[n];
    for(int i=0; i<n; i++)
     cin>>arr[i];
     
    cout<<Equal_012(arr, n);
    return 0;
}