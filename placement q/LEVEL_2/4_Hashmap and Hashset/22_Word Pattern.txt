/*1. You are given two strings S1 and S2. S1 represents a word of length N and S2 represents N space-separated words.
2. You have to find if the words in S2 follow the exact order as characters in S1.*/

#include<bits/stdc++.h>
using namespace std;

bool word_pattern(string str1, string str2)
{
    vector<string> words;
    
    string word = "";
    for (int i=0; i<str2.length(); i++) 
    {
        if (str2[i] == ' ')
        {
            words.push_back(word);
            word = "";
        }
        else {
            word = word + str2[i];
        }
    }
    words.push_back(word);
    
    
    if(str1.length() != words.size()){
        return false;
    }
    
    unordered_map<char, string>mapping;                     
    unordered_map<string, bool> boolean;                     
    
    for(int i=0; i<str1.length(); i++)
    {
        char ch = str1[i];
        word = words[i];
        
        if(mapping.find(ch)==mapping.end())
        {
            if(boolean[word]==true)
             return false;
             
            boolean[word] = true;
            mapping[ch] = word;
        }
        else
        {
            if(mapping[ch] != word)
             return false;
        }
    }
    
    return true;
}

int main()
{
    string str1, str2;
    cin>>str1>>str2;
    
    if(word_pattern(str1, str2)){
        cout<<"true";
    }
    else{
        cout<<"false";
    }
    
    return 0;
}