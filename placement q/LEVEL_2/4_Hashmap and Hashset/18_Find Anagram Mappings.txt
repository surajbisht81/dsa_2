/*1. You are given two integer arrays(A and B), where B is an anagram of A.
2. B is an anagram of A means B is made by randomizing the order of the elements in A.
3. For every element in A, you have to print the index of that element in B.
Sample Input
6
1 2 3 4 5 2
4 3 2 1 5 2
Sample Output
3 2 1 0 4 5 */

#include<bits/stdc++.h>
using namespace std;

void Anagram_Mapping(int arr1[], int arr2[], int n)
{
    unordered_map<int, pair<int, vector<int>> > mp;   // mp first is array value, map second.first is index for iterating vector  and map second.second is value of index
    
    for(int i=0; i<n; i++)
    {
        if(mp.find(arr2[i]) == mp.end()){                  // if elemnt of 2nd array is not present already then make vector then pair having initial idx as 0 
            
            vector<int> v{i};                              // and put it into the map
            pair<int, vector<int>> p = make_pair(0, v);
            mp[arr2[i]] = p;
        }
        else{
            
            vector<int> v = (mp[arr2[i]]).second;        // else if it is present in map already then, first get the vector and update the vector then put again 
            v.push_back(i);
            mp[arr2[i]].second = v;                      // vector into the map otherwise you will not get ans
        }
    }
    
    for(int i=0; i<n; i++)
    {
       vector<int> v = mp[arr1[i]].second;
       
       int idx = mp[arr1[i]].first;
       
       cout<<v[idx]<<" ";
       
       idx++;
       
       mp[arr1[i]].first = idx;
    }
}

int main()
{
    int n;
    cin>>n;
    
    int arr1[n], arr2[n];
    for(int i=0; i<n; i++){
        cin>>arr1[i];
    }
    
    for(int i=0; i<n; i++){
        cin>>arr2[i];
    }
    
    Anagram_Mapping(arr1, arr2, n);
    return 0;
}