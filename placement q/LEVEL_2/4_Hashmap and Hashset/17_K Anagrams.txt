/*1. You are given two strings s1, s2, and a number K.
2. You have to find if two strings are K-anagrams of each other or not.
3. Two strings are called K-anagrams if 
   -> Both s1 and s2 have the same number of characters.
   -> After changing K characters in any string, s1 and s2 become anagram of each other. */
   
#include<bits/stdc++.h>
using namespace std;

bool K_Anagram(string str1, string str2, int k)
{
    if(str1.length() != str2.length()){
        return false;
    }
    
    unordered_map<char, int> mp;
    
    for(int i=0; i<str1.length(); i++){
        mp[str1[i]]++;
    }
    
    for(int i=0; i<str2.length(); i++){
        if(mp[str2[i]] > 0){
            mp[str2[i]]--;
        }
    }
    
    int ans = 0;
    for(auto kv : mp)
    {
        if(kv.second > 0){
            ans += kv.second;
        }
    }
    
    return (ans <= k);
}

int main()
{
    string str1, str2;
    cin>>str1>>str2;
    
    int k;
    cin>>k;
    
    bool ans = K_Anagram(str1, str2, k);
    
    if(ans==true){
        cout<<"true";
    }else{
        cout<<"false";
    }
    return 0;
}