/*1. You are given a word.
2. You have to generate all abbrevations of that word.
Note - Use bit manipulation*/


#include<bits/stdc++.h>
using namespace std;

void solution(string str)
{
    int n = str.length();
    
    for(int i=0; i<(1<<n); i++)            // we are checking all the combinations (for eg., for str = pep, i=0 to i=7)
    {
        int count = 0;
        
        for(int j=0; j<n; j++)             // we have to traverse from string start to end to check if this character will come or not
        {
            int bit = n-j-1;              // for 0th bit we will check the right most bit, for string pep, for j=0, bit checked will be (3-0-1=2)
            
            if((i & (1<<bit))==0){       // if in ith number, 2nd bit is 0 then
                
                if(count==0){               // if count is 0 then just print the character at jth bit
                    cout<<str[j];
                }else{                         // else if count is not 0 then first print count then character then set the count again to 0
                    cout<<count;
                    cout<<str[j];
                    count = 0;
                }
                
            }
            else{                          // else if bit is not set the increment the count
                count++;
            }
        }
        if(count > 0)
         cout<<count;
         
        cout<<endl;
    }
}

int main()
{
    string str;
    cin>>str;
    
    solution(str);
    return 0;
}