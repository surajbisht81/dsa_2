/*
1. You are given a number n, representing the size of array a.
2. You are given n numbers, representing the prices of a share on n days.
3. You are required to find the stock span for n days.
4. Stock span is defined as the number of days passed between the current day and the first day before today when price was higher than today.

The intution behind this problem is next greater element on the left of current element.
*/




#include <bits/stdc++.h>
using namespace std;
void display(vector<int>a){
    for(int i=0;i<a.size();i++)
    {
        cout<<a[i]<<endl;
    }
}

vector<int> solve(vector<int>arr)
{
    vector<int> span;

    stack<int> st;

    for(int i=0; i<arr.size(); i++)
    {
        while( !st.empty() && arr[i] > arr[st.top()] ){
            st.pop();
        }

        if(st.empty()){
            span.push_back(i+1);
        }
        else{
            span.push_back(i - st.top());
        }

        st.push(i);
    }

    return span;
}

int main(int argc, char **argv)
{  
    int n;
    cin>>n;
    vector<int>arr(n,0);
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    vector<int>span(n,0);
    span=solve(arr);
    display(span);
   return 0;
}
