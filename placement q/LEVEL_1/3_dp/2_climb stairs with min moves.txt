/*1. You are given a number n, representing the number of stairs in a staircase.
2. You are on the 0th step and are required to climb to the top.
3. You are given n numbers, where ith element's value represents - till how far from the step you 
     could jump to in a single move.  You can of-course fewer number of steps in the move.
4. You are required to print the number of minimum moves in which you can reach the top of 
     staircase.*/
#include<bits/stdc++.h>
using namespace std;

int min_moves(int arr[], int n)
{
   int dp[n+1]={INT_MAX};                        // initially dp contains max value
   
   dp[n]=0;                                      // there is 0 ways to reach nth stair from nth stair;
   
   for(int i=n-1; i>=0; i--) 
   {
       int minim = INT_MAX;                      
       for(int j=1; j<=arr[i] && i+j<(n+1); j++)
       { 
           minim = min(minim, dp[i+j]);                // finding the minimum of moves in arr[i]
       }
       if(minim!=INT_MAX)
         dp[i] = minim+1;                            // if minimum is not equal to int_max then dp will = 1 + minim;
       else
         dp[i] = INT_MAX;
   }
   return dp[0];
}

int main()
{
    int n;
    cin>>n;
    
    int arr[n];
    for(int i=0; i<n; i++)
     cin>>arr[i];
     
    int res = min_moves(arr, n);
    cout<<res;
    return 0;
}