//-----------------------gfg solution --------------------------

class Solution {
public:
    
    bool isValid(TreeNode *root, int min, int max){
        
        if(!root) return true;
        
        if(min > root->val || root->val > max){
            return false;
        }
        
        return isValid(root->left, min, root->val-1) && isValid(root->right, root->val+1, max);
    }
    
    bool isValidBST(TreeNode* root) {
        return isValid(root, INT_MIN, INT_MAX);
    }
};


//---------------------- other solution best -------------------------------

class Solution {
public:
    TreeNode *prev = NULL;
    
    bool isValidBST(TreeNode* root) {
        
        if(root == NULL){
            return true;
        }
        
        if(!isValidBST(root->left)){
            return false;
        }
        
        if(prev!=NULL && prev->val >= root->val){
            return false;
        }
        
        prev = root;
        
        if(!isValidBST(root->right)){
            return false;
        }
        
        return true;
    }
};
