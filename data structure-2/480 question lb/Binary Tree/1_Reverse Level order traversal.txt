/*  Input :
       10
      /  \
     20   30
    / \ 
   40  60

Output: 40 60 20 30 10
Explanation:
Traversing level 2 : 40 60
Traversing level 1 : 20 30
Traversing level 0 : 10*/


vector<int> reverseLevelOrder(Node *root)
{
     vector<int> res;
     stack<int> st;
     queue<Node*> qu;
     
     qu.push(root);
     
     while(!qu.empty()){
         Node *p = qu.front();
         qu.pop();
         
         if(p->right) qu.push(p->right);
         if(p->left) qu.push(p->left);
         
         st.push(p->data);
     }
     
     while(!st.empty()){
         res.push_back(st.top());
         st.pop();
     }
     return res;
}