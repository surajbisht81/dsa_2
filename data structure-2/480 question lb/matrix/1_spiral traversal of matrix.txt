class Solution
{   
public:     
    vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
        //clockwise traversel of matrix
        
        vector<int> res;
        
        int tnc = r*c;
        
        int minr = 0, minc = 0;
        int maxr = r-1, maxc = c-1;
        
        int cnt = 0;
        
        while(cnt < tnc)
        {
            //top
            for(int i=minr, j=minc; j<=maxc && cnt<tnc; j++){
                res.push_back(matrix[i][j]);
                cnt++;
            }
            minr++;
            
            // right
            for(int i=minr, j=maxc; i<=maxr && cnt<tnc; i++){
                res.push_back(matrix[i][j]);
                cnt++;
            }
            maxc--;
            
            // down
            for(int i=maxr, j=maxc; j>=minc && cnt<tnc; j--){
                res.push_back(matrix[i][j]);
                cnt++;
            }
            maxr--;
            
            //left
            for(int i=maxr, j=minc; i>=minr && cnt<tnc; i--){
                res.push_back(matrix[i][j]);
                cnt++;
            }
            minc++;
        }
        return res;
    }
};