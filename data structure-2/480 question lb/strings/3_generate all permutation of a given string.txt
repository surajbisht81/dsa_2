 #include <bits/stdc++.h> 
using namespace std; 

void permute(string str, char arr[], int idx)
{
     if(idx == str.length())
     {
       for(int i=0; i<str.length(); i++){
         cout<<arr[i];
       }
        cout<<endl;
     }
  
     for(int i=0; i<str.size(); i++)
     {
         if(arr[i] == 0)
         {
            arr[i] = str[idx];
            permute(str, arr, idx+1);
            arr[i] = 0;
         }
     }
}

int main() 
{ 
	string str = "ABC"; 
    char arr[str.size()] = {0};
    
   permute(str, arr, 0);
	return 0; 
} 


//2nd method

void permute(string a, int l, int r) 
{ 
    // Base case 
    if (l == r) 
        cout<<a<<endl; 
    else
    { 
        // Permutations made 
        for (int i = l; i <= r; i++) 
        { 
 
            // Swapping done 
            swap(a[l], a[i]); 
 
            // Recursion called 
            permute(a, l+1, r); 
 
            //backtrack 
            swap(a[l], a[i]); 
        } 
    } 
} 
 
// Driver Code 
int main() 
{ 
    string str = "ABC"; 
    int n = str.size(); 
    permute(str, 0, n-1); 
    return 0; 
} 

O(n*n!) Note that there are n! permutations and it requires O(n) time to print a a permutation.