/*The count-and-say sequence is a sequence of digit strings defined by the recursive formula:

countAndSay(1) = "1"
countAndSay(n) is the way you would "say" the digit string from countAndSay(n-1), which is then converted into a different digit string.*/


class Solution {
public:
    string countAndSay(int n) {
        
        if(n<=0)
           return "";
        
        string res = "1";                                  // for n=1;
        
        while(n > 1)   // we have to calculate furtuhur for n-1 times
        {
            string curr = "";                                   // curr is string for current ith term
            for(int i=0; i<res.length(); i++)                   // res is previous string and we have to make curr string based upon previous string 
            {
                int cnt = 1;                                    // initially every character of res is having count as 1
                while(i+1<res.length() && res[i]==res[i+1]){    // i+1<res.length is for boundary cases, and till ith and i+1th char are same increase the cnt and i also
                    cnt++;
                    i++;
                }
                
                curr += to_string(cnt) + res[i];                 // after coming out of while loop, first write cnt as string then ith char of res
            }
            
            res = curr;                                         // after foring current term, make res as curr for next term
            
            n--;       // decrease n after each term
        }
        
        return res;
    }
};