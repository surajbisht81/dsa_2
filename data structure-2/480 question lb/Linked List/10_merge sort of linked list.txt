#include <bits/stdc++.h>
using namespace std;
#define ll long long int 

class Node { 
public: 
    int data; 
    Node* next; 
}; 

void splitList(Node *head, Node **a, Node **b)
{
    Node *slow = head;
    Node *fast = head->next;
    
    while(fast!=NULL && fast->next!=NULL && fast->next->next!=NULL)
    {
        fast = fast->next->next;
        slow = slow->next;
    } 
    
    *b = slow->next;
    *a = head;
    slow->next = NULL;
}

Node *Merge(Node *a, Node *b)
{
    Node *res = NULL;
    
    if(a == NULL){
        return b;
    }
    
    if(b == NULL){
        return a;
    }
    
    if(a->data <= b->data){
        res = a;
        res->next = Merge(a->next, b);
    }else{
        res = b;
        res->next = Merge(a, b->next);
    }
    
    return res;
}

void MergeSort(Node **headRef)
{
    Node *head = (*headRef);
    Node *a = NULL;
    Node *b = NULL;
    
    if(*headRef==NULL || (*headRef)->next == NULL){
        return;
    }
    
    splitList(head, &a, &b);
    
    MergeSort(&a);
    MergeSort(&b);
    
    *headRef = Merge(a, b);
}

void printList(Node* node) 
{ 
    while (node != NULL) { 
        cout << node->data << " "; 
        node = node->next; 
    } 
} 
 
void push(Node** head_ref, int new_data) 
{ 
    Node* new_node = new Node(); 
  
    new_node->data = new_data; 
  
    new_node->next = (*head_ref); 
  
    (*head_ref) = new_node; 
} 

int main() 
{ 
    Node* res = NULL; 
    Node* a = NULL; 
  
    push(&a, 15); 
    push(&a, 10); 
    push(&a, 5); 
    push(&a, 20); 
    push(&a, 3); 
    push(&a, 2);
    push(&a, -1);
    push(&a, -2);
    push(&a, -1);
  
    MergeSort(&a); 
  
    cout << "Sorted Linked List is: \n"; 
    printList(a); 
  
    return 0; 
} 